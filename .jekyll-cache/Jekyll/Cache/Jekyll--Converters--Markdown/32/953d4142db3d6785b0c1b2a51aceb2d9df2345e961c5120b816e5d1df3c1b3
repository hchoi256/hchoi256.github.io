I"}O<h1 id="car-sales-prediction">Car Sales Prediction</h1>

<h2 id="learning-goals">Learning Goals</h2>
<p>Artificial Neural Network (ANN)을 이용한 회귀 작업 처리를 이해한다.</p>

<p>순방향/역전파를 동반하는 가중치 학습의 과정에 대해 보다 나은 이해를 도모한다.</p>

<h2 id="description">Description</h2>
<p>여러분이 자동차 딜러 혹은 차량 판매원이라 가정하고, 상기 고객들의 특정 데이터(나이, 연봉, etc.)를 참고하여 고객들이 차량 구매에 사용할 금액을 예측하여 특정 집단에 대한 타깃 마케팅을 이루고자 한다.</p>

<h3 id="dataset">Dataset</h3>
<html>
  <head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
      <meta name="generator" content="PhpSpreadsheet, https://github.com/PHPOffice/PhpSpreadsheet" />
      <meta name="author" content="owner" />
    <style type="text/css">
      html { font-family:Calibri, Arial, Helvetica, sans-serif; font-size:11pt; background-color:white }
      a.comment-indicator:hover + div.comment { background:#ffd; position:absolute; display:block; border:1px solid black; padding:0.5em }
      a.comment-indicator { background:red; display:inline-block; border:1px solid black; width:0.5em; height:0.5em }
      div.comment { display:none }
      table { border-collapse:collapse; page-break-after:always }
      .gridlines td { border:1px dotted black }
      .gridlines th { border:1px dotted black }
      .b { text-align:center }
      .e { text-align:center }
      .f { text-align:right }
      .inlineStr { text-align:left }
      .n { text-align:right }
      .s { text-align:left }
      td.style0 { vertical-align:bottom; border-bottom:none #000000; border-top:none #000000; border-left:none #000000; border-right:none #000000; color:#000000; font-family:'Calibri'; font-size:11pt; background-color:white }
      th.style0 { vertical-align:bottom; border-bottom:none #000000; border-top:none #000000; border-left:none #000000; border-right:none #000000; color:#000000; font-family:'Calibri'; font-size:11pt; background-color:white }
      table.sheet0 col.col0 { width:42pt }
      table.sheet0 col.col1 { width:42pt }
      table.sheet0 col.col2 { width:42pt }
      table.sheet0 col.col3 { width:42pt }
      table.sheet0 col.col4 { width:42pt }
      table.sheet0 col.col5 { width:42pt }
      table.sheet0 col.col6 { width:42pt }
      table.sheet0 col.col7 { width:42pt }
      table.sheet0 col.col8 { width:42pt }
      table.sheet0 tr { height:15pt }
    </style>
  </head>
  <body>
<style>
@page { margin-left: 0.7in; margin-right: 0.7in; margin-top: 0.75in; margin-bottom: 0.75in; }
body { margin-left: 0.7in; margin-right: 0.7in; margin-top: 0.75in; margin-bottom: 0.75in; }
</style>
    <table border="0" cellpadding="0" cellspacing="0" id="sheet0" class="sheet0 gridlines">
        <col class="col0" />
        <col class="col1" />
        <col class="col2" />
        <col class="col3" />
        <col class="col4" />
        <col class="col5" />
        <col class="col6" />
        <col class="col7" />
        <col class="col8" />
        <tbody>
          <tr class="row0">
            <td class="column0 style0 s">Customer Name</td>
            <td class="column1 style0 s">Customer e-mail</td>
            <td class="column2 style0 s">Country</td>
            <td class="column3 style0 s">Gender</td>
            <td class="column4 style0 s">Age</td>
            <td class="column5 style0 s">Annual Salary</td>
            <td class="column6 style0 s">Credit Card Debt</td>
            <td class="column7 style0 s">Net Worth</td>
            <td class="column8 style0 s">Car Purchase Amount</td>
          </tr>
          <tr class="row1">
            <td class="column0 style0 s">Martina Avila</td>
            <td class="column1 style0 s">cubilia.Curae.Phasellus@quisaccumsanconvallis.edu</td>
            <td class="column2 style0 s">Bulgaria</td>
            <td class="column3 style0 n">0</td>
            <td class="column4 style0 n">41.8517198</td>
            <td class="column5 style0 n">62812.09301</td>
            <td class="column6 style0 n">11609.38091</td>
            <td class="column7 style0 n">238961.2505</td>
            <td class="column8 style0 n">35321.45877</td>
          </tr>
          <tr class="row2">
            <td class="column0 style0 s">Harlan Barnes</td>
            <td class="column1 style0 s">eu.dolor@diam.co.uk</td>
            <td class="column2 style0 s">Belize</td>
            <td class="column3 style0 n">0</td>
            <td class="column4 style0 n">40.87062335</td>
            <td class="column5 style0 n">66646.89292</td>
            <td class="column6 style0 n">9572.957136</td>
            <td class="column7 style0 n">530973.9078</td>
            <td class="column8 style0 n">45115.52566</td>
          </tr>
          <tr class="row3">
            <td class="column0 style0 s">Naomi Rodriquez</td>
            <td class="column1 style0 s">vulputate.mauris.sagittis@ametconsectetueradipiscing.co.uk</td>
            <td class="column2 style0 s">Algeria</td>
            <td class="column3 style0 n">1</td>
            <td class="column4 style0 n">43.15289747</td>
            <td class="column5 style0 n">53798.55112</td>
            <td class="column6 style0 n">11160.35506</td>
            <td class="column7 style0 n">638467.1773</td>
            <td class="column8 style0 n">42925.70921</td>
          </tr>
          <tr class="row4">
            <td class="column0 style0 s">Jade Cunningham</td>
            <td class="column1 style0 s">malesuada@dignissim.com</td>
            <td class="column2 style0 s">Cook Islands</td>
            <td class="column3 style0 n">1</td>
            <td class="column4 style0 n">58.27136945</td>
            <td class="column5 style0 n">79370.03798</td>
            <td class="column6 style0 n">14426.16485</td>
            <td class="column7 style0 n">548599.0524</td>
            <td class="column8 style0 n">67422.36313</td>
          </tr>
          <tr class="row5">
            <td class="column0 style0 s">Cedric Leach</td>
            <td class="column1 style0 s">felis.ullamcorper.viverra@egetmollislectus.net</td>
            <td class="column2 style0 s">Brazil</td>
            <td class="column3 style0 n">1</td>
            <td class="column4 style0 n">57.31374945</td>
            <td class="column5 style0 n">59729.1513</td>
            <td class="column6 style0 n">5358.712177</td>
            <td class="column7 style0 n">560304.0671</td>
            <td class="column8 style0 n">55915.46248</td>
          </tr>
        </tbody>
    </table>
  </body>
</html>

<p><strong>독립변수</strong></p>
<ul>
  <li>Customer Name</li>
  <li>Customer e-mail</li>
  <li>Country</li>
  <li>Gender</li>
  <li>Age</li>
  <li>Annual Salary</li>
  <li>Credit Card Debt.</li>
  <li>Net Worth</li>
</ul>

<p><strong>종속변수</strong></p>
<ul>
  <li>Car Purchase Amount</li>
</ul>

<h2 id="import-dataset">Import Dataset</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span> <span class="c1"># 데이터 프레임 조작
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span> <span class="c1"># 수치 해석
</span><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span> <span class="c1"># 그래프 시각화
</span><span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span> <span class="c1"># 그래프 시각화
</span>
<span class="n">car_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'Car_Purchasing_Data.csv'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'ISO-8859-1'</span><span class="p">)</span> <span class="c1"># 데이터셋이 '@'와 같은 특수문자를 포함하기 때문에 상기 인코딩 설정을 해줘야한다.
</span></code></pre></div></div>

<h2 id="data-visualization">Data Visualization</h2>

<h3 id="seaborn">Seaborn</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">sns</span><span class="p">.</span><span class="n">pairplot</span><span class="p">(</span><span class="n">car_df</span><span class="p">)</span> <span class="c1"># 씨본 덕분에 분석 작업을 여러 번 할 필요없이 여러 종류의 시각화를 보여준다
</span></code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/180380848-d3772ba0-a21b-416b-8139-534c7a3aa721.JPG" alt="screensht" /></p>

<p>데이터 분포에서 맨 아래 위치한 행은 ‘Car Purchase Amount’이고, 각 열은 순서대로 Gender, Age, Annual Salary, Credit Car Debt, Net Worth, Car Purchase Amount이다.</p>

<p>따라서, 나이가 증가함에 따라 차량 구매 예상 금액이 증가하는 선형적 형태의 데이터 분포를 보여주고, 반대로 Credit Card Debt은 종속변수와 뚜렷한 상관관계를 나타내지 않는 것으로 관찰된다.</p>

<h2 id="data-preprocessing">Data Preprocessing</h2>
<h2 id="remove-unnecessary-variables">Remove Unnecessary Variables</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">X</span> <span class="o">=</span> <span class="n">car_df</span><span class="p">.</span><span class="n">drop</span><span class="p">([</span><span class="s">'Customer Name'</span><span class="p">,</span> <span class="s">'Customer e-mail'</span><span class="p">,</span> <span class="s">'Country'</span><span class="p">,</span> <span class="s">'Car Purchase Amount'</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">)</span> <span class="c1"># 종속변수에 영향을 끼치지 않는 불필요한 입력피처를 제거한다.
</span><span class="n">y</span> <span class="o">=</span> <span class="n">car_df</span><span class="p">[</span><span class="s">'Car Purchase Amount'</span><span class="p">]</span> <span class="c1"># 종속변수
</span>
<span class="n">X</span> <span class="c1"># 정제된 훈련 데이터 관찰
</span></code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/180381916-2051d577-51ec-4ff8-be80-0685754f456b.png" alt="image" /></p>

<h3 id="data-scaling">Data Scaling</h3>
<p>나이와 연봉과 같은 입력피처의 수치가 차이가 커서, 특정 피처에 과중화된 결과가 나올 수 있으므로 [0, 1] 값으로 정규화하는 스케일링(Scailing)을 적용해야 한다.</p>

<p>이번 프로젝트에서, 우리는 <strong>MinMaxScaler</strong>를 사용한다.</p>

<p>기존 StandardScaler와 MinMaxScaler의 차이점은 데이터가 <strong>정규분포를 따르는지 혹은 따라야 하는지</strong>에 달려있다.</p>

<p><a href="https://velog.io/@ljs7463/%ED%94%BC%EC%B2%98-%EC%8A%A4%EC%BC%80%EC%9D%BC%EB%A7%81StandardScalerMinMaxScaler">참고</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">MinMaxScaler</span>

<span class="n">scaler</span> <span class="o">=</span> <span class="n">MinMaxScaler</span><span class="p">()</span>
<span class="n">X_scaled</span> <span class="o">=</span> <span class="n">scaler</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">X</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="model-training">Model Training</h2>

<p><strong>Dense</strong></p>
<ul>
  <li><em>첫번째 인자</em> : 출력 뉴런의 수를 설정합니다.</li>
  <li><em>input_dim</em> : 입력 뉴런의 수를 설정합니다.</li>
  <li><em>init</em> : 가중치 초기화 방법 설정합니다.
    <ul>
      <li>‘uniform’ : 균일 분포</li>
      <li>‘normal’ : 가우시안 분포</li>
    </ul>
  </li>
  <li><em>activation</em> : 활성화 함수 설정합니다.
    <ul>
      <li>‘linear’ : 디폴트 값, 입력뉴런과 가중치로 계산된 결과값이 그대로 출력으로 나옵니다.</li>
      <li>‘relu’ : rectifier 함수, 은익층에 주로 쓰입니다.</li>
      <li>‘sigmoid’ : 시그모이드 함수, 이진 분류 문제에서 출력층에 주로 쓰입니다.</li>
      <li>‘softmax’ : 소프트맥스 함수, 다중 클래스 분류 문제에서 출력층에 주로 쓰입니다.</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.model_selection</span> <span class="kn">import</span> <span class="n">train_test_split</span>
<span class="n">X_train</span><span class="p">,</span> <span class="n">X_test</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">y_test</span> <span class="o">=</span> <span class="n">train_test_split</span><span class="p">(</span><span class="n">X_scaled</span><span class="p">,</span> <span class="n">y_scaled</span><span class="p">,</span> <span class="n">test_size</span> <span class="o">=</span> <span class="mf">0.25</span><span class="p">)</span> <span class="c1"># Create training and test set
</span>
<span class="kn">import</span> <span class="nn">tensorflow.keras</span>
<span class="kn">from</span> <span class="nn">keras.models</span> <span class="kn">import</span> <span class="n">Sequential</span> <span class="c1"># 신경망을 순차적 형태로 설계
</span><span class="kn">from</span> <span class="nn">keras.layers</span> <span class="kn">import</span> <span class="n">Dense</span> <span class="c1"># 뉴런의 입출력을 연결해주는 완전 연결 신경망 생성
</span><span class="kn">from</span> <span class="nn">sklearn.preprocessing</span> <span class="kn">import</span> <span class="n">MinMaxScaler</span>

<span class="n">model</span> <span class="o">=</span> <span class="n">Sequential</span><span class="p">()</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span> <span class="n">input_dim</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">))</span>
<span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">25</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'relu'</span><span class="p">))</span> <span class="c1"># 순차적 망이기 때문에 'input)dim'은 다시 쓰지 않아도 된다.
</span><span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">Dense</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'linear'</span><span class="p">))</span> <span class="c1"># output 값
</span><span class="n">model</span><span class="p">.</span><span class="n">summary</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/180387209-a42f1385-dacc-45a3-a844-0ea2c3384262.png" alt="image" /></p>

<p><strong>입력값 개수</strong>: 5 (나이, etc.)</p>

<p><strong>뉴런 개수</strong>: 25</p>

<p><strong>bias</strong>: 은닉층 뉴런 개수에 맞게 할당된다 (i.e., 은닉층 뉴런 개수 25개 –&gt; bias 역시 25개가 존재한다).</p>

<p><strong>훈련 가능한 파라미터</strong>: 딥러닝 모델 학습의 역전파 과정에서 피라미터 업데이트의 대상이 되는 가중치와 bias를 말한다.</p>

<ol>
  <li>
    <p>초기 입력값에서 첫 번째 은닉층까지, <em>*훈련 가능한 피라미터</em> 개수 = 5(입력값 개수) * 25(첫 은닉층 뉴런개수) + 25(bias) = 150</p>
  </li>
  <li>
    <p>초기 입력값에서 두 번째 은닉층까지, <em>*훈련 가능한 피라미터</em> 개수 =  25(첫 은닉층 뉴런개수) * 25(두 번째 은닉층 뉴런개수) + 25(bias) = 650</p>
  </li>
  <li>
    <p>출력, <em>*훈련 가능한 피라미터</em> 개수 = 25(두 번째 은닉층 뉴런개수) * 1(출력값은 하나) + 1(bias) = 150</p>
  </li>
</ol>

<blockquote>
  <p>Toal params: 826</p>
  <blockquote>
    <p>입출력 값에 대한 최선의 상관관계 도출을 위해 훈련되거나 조정되는 피라미터 총 개수이다.</p>
  </blockquote>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="s">'adam'</span><span class="p">,</span> <span class="n">loss</span><span class="o">=</span><span class="s">'mean_squared_error'</span><span class="p">)</span> <span class="c1"># 모델 학습 방법 제시
</span>
</code></pre></div></div>
<p><img src="https://user-images.githubusercontent.com/39285147/180389686-0fd6c3e2-8ee8-4e0f-999c-7686f8f89d41.png" alt="image" /></p>

<blockquote>
  <p>Optimizer</p>
  <blockquote>
    <p>모델이 학습과정에서 어떻게 가중치 최적화를 이뤄내는지에 대한 방법을 제시한다.</p>

    <p><a href="https://github.com/hchoi256/lg-ai-auto-driving-radar-sensor/blob/main/supervised-learning/gradient-discent.md">adam이란?</a></p>
  </blockquote>
</blockquote>

<blockquote>
  <p>loss (손실함수)</p>
  <blockquote>
    <p>모델의 정확도를 판단하는데 사용되는 방법론이다.</p>

    <p>mean_squared_error (평균제곱오차)</p>
    <blockquote>
      <blockquote>

        <p>예측값과 실제값의 차이를 나타내는 정도로, 그 값이 작을수록 실제값과 유사하여 정확한 예측을 해냈다고 볼 수 있다.</p>
      </blockquote>
    </blockquote>
  </blockquote>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">epochs_hist</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">X_train</span><span class="p">,</span> <span class="n">y_train</span><span class="p">,</span> <span class="n">epochs</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">25</span><span class="p">,</span>  <span class="n">verbose</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">validation_split</span><span class="o">=</span><span class="mf">0.2</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/180390662-b659a0d9-6f49-46cd-bb01-acd9cf2bd4b5.png" alt="image" /></p>

<p>모델이 학습하면서 epoch를 거듭함에 따라 loss(여기서는 평균제곱오차 방법을 사용)의 값이 줄어드는 것을 볼 수 있다.</p>

<ul>
  <li>epoch: 배치 사이즈만큼의 하나의 학습을 몇번 시행할지 결정한다. 그 크기가 모델 성능을 향상시키는 최대 임계치에 가까워 질수록 더 정확한 예측을 해낼 수 있다.</li>
  <li>batch_size: 한 번에 학습할 훈련 데이터 개수</li>
  <li>verbose: 디폴트 0. 1로 지정하면 Epoch의 상황과, loss의 값이 output에 보여준다.</li>
  <li><a href="https://github.com/hchoi256/ai-terms/blob/main/README.md">validation_splot</a>:</li>
</ul>
:ET