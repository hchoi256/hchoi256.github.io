I"UG<hr />
<h1 id="강아지-품종-분류-ai-웹페이지">강아지 품종 분류 AI 웹페이지</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">opencv</span><span class="o">-</span><span class="n">python</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Loading the libraries
</span><span class="kn">from</span> <span class="nn">distutils.command.install_egg_info</span> <span class="kn">import</span> <span class="n">to_filename</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">streamlit</span> <span class="k">as</span> <span class="n">st</span>
<span class="kn">import</span> <span class="nn">cv2</span> <span class="c1"># *opencv
</span><span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>
<span class="kn">from</span> <span class="nn">tensorflow</span> <span class="kn">import</span> <span class="n">keras</span>
</code></pre></div></div>

<p>상기 라이브러리 중에 눈에 띄는 것이 있다; <strong>cv2</strong></p>

<p>cv2 라이브러리는 opencv 패키지를 설치해서 불러올 수 있다.</p>

<p>*OpenCV(Open Source Computer Vision)는 다양한 영상/동영상 처리에 사용할 수 있는 실시간 처리에 능한 오픈소스 라이브러리이다.</p>

<p>실시간 웹서버와 같은 환경에서 활용성이 좋다!</p>

<p>자, 이제 여러 장의 서로 다른 강아지 품종 이미지를 학습한 사전 학습 모델 ‘dog_breed.h5’를 전이학습을 위해 불러오자.</p>

<blockquote>
  <p>해당 사전모델 요청 시 제공.</p>
</blockquote>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span> <span class="o">=</span> <span class="n">keras</span><span class="p">.</span><span class="n">models</span><span class="p">.</span><span class="n">load_model</span><span class="p">(</span><span class="s">"dog_breed.h5"</span><span class="p">)</span>
</code></pre></div></div>

<p>불러온 사전학습 모델은 다음과 같이 세 가지 강아지 품종의 클래스로 최종 출력을 도출한다.</p>

<p>만약, 더 완성도 높은 분류 모델을 형성하고 싶다면 <strong>fine-tuning</strong> 작업을 통해 모델 개선 혹은 <strong>ImageNet</strong>을 사전모델로 채택하는 선택지를 취할 수 있을 것이다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">CLASS_NAMES</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Scottish Deerhound'</span><span class="p">,</span><span class="s">'Maltese Dog'</span><span class="p">,</span><span class="s">'Bernese Mountain Dog'</span><span class="p">]</span>
</code></pre></div></div>

<p>상기 세 가지 강아지 품종 중에서 그나마 가장 유사한 종으로 인풋 이미지를 분류한다.</p>

<p>자, 이제 이전 시간에 배웠던 웹 페이지를 디자인할 시간이다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">st</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">"업로드한 개의 품종를 알아보자!"</span><span class="p">)</span> <span class="c1"># title
</span><span class="n">st</span><span class="p">.</span><span class="n">markdown</span><span class="p">(</span><span class="s">"개 이미지를 업로드 해주세요!"</span><span class="p">)</span>
<span class="n">st</span><span class="p">.</span><span class="n">markdown</span><span class="p">(</span><span class="s">"---"</span><span class="p">)</span> <span class="c1"># division
</span>
<span class="c1"># file uploader
</span><span class="n">dog_image</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">file_uploader</span><span class="p">(</span>
    <span class="n">label</span> <span class="o">=</span> <span class="s">"이미지를 선택해주세요..."</span><span class="p">,</span> 
    <span class="nb">type</span> <span class="o">=</span> <span class="p">[</span><span class="s">"jpg"</span><span class="p">,</span> <span class="s">"png"</span><span class="p">]</span>
<span class="p">)</span>
<span class="n">submit</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">button</span><span class="p">(</span><span class="s">"예측해주세요!"</span><span class="p">)</span> <span class="c1"># button object
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># button event handler
</span><span class="k">if</span> <span class="n">submit</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">dog_image</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="c1"># opencv의 imdecode 인자로 사용하기 위해 byte로 변환한다
</span>        <span class="n">file_bytes</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">asarray</span><span class="p">(</span>
            <span class="nb">bytearray</span><span class="p">(</span><span class="n">dog_image</span><span class="p">.</span><span class="n">read</span><span class="p">()),</span> 
            <span class="n">dtype</span><span class="o">=</span><span class="n">np</span><span class="p">.</span><span class="n">uint8</span>
    <span class="p">)</span>
    <span class="n">opencv_image</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">imdecode</span><span class="p">(</span><span class="n">file_bytes</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="c1"># save the input image
</span>
    <span class="n">st</span><span class="p">.</span><span class="n">image</span><span class="p">(</span><span class="n">opencv_image</span><span class="p">,</span> <span class="n">channels</span> <span class="o">=</span> <span class="s">"BGR"</span><span class="p">)</span> <span class="c1"># opencv는 RGB가 아닌 BGR로 포맷을 저장한다
</span>
    <span class="c1"># adjusting the size
</span>    <span class="n">opencv_image</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">opencv_image</span><span class="p">,</span> <span class="p">(</span><span class="mi">224</span><span class="p">,</span> <span class="mi">224</span><span class="p">))</span>
    <span class="n">opencv_image</span><span class="p">.</span><span class="n">shape</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">224</span><span class="p">,</span> <span class="mi">224</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>

    <span class="n">Y_pred</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">predict</span><span class="p">(</span><span class="n">opencv_image</span><span class="p">)</span> <span class="c1"># fine-tuned model 예측 수행
</span>
    <span class="c1"># st.write(np.argmax(Y_pred))
</span>    <span class="n">st</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="s">"판단한 개의 품종은 "</span> <span class="o">+</span> <span class="n">CLASS_NAMES</span><span class="p">[</span><span class="n">np</span><span class="p">.</span><span class="n">argmax</span><span class="p">(</span><span class="n">Y_pred</span><span class="p">)]))</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/184471368-46e7b321-db37-41d1-acd6-717e9478f320.png" alt="image" /></p>

<hr />
<h1 id="dataframe-분석하기">Dataframe 분석하기</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">streamlit</span> <span class="k">as</span> <span class="n">st</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">seaborn</span> <span class="k">as</span> <span class="n">sns</span>
</code></pre></div></div>

<p>어떠한 dataset을 df 객체에 저장했다고 가정하자.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">data_types</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">dtypes</span>
<span class="n">cat_cols</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">data_types</span><span class="p">[</span><span class="n">data_types</span> <span class="o">==</span> <span class="s">"object"</span><span class="p">].</span><span class="n">index</span><span class="p">)</span> <span class="c1"># 범주형 컬럼 저장
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># container
</span><span class="k">with</span> <span class="n">st</span><span class="p">.</span><span class="n">container</span><span class="p">():</span>
    <span class="n">st</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"컨테이너"</span><span class="p">)</span>
    <span class="n">value_counts</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"Sex"</span><span class="p">].</span><span class="n">value_counts</span><span class="p">()</span>
    <span class="n">st</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">value_counts</span><span class="p">.</span><span class="n">index</span><span class="p">)</span>
    <span class="n">col1</span><span class="p">,</span> <span class="n">col2</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">columns</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>

    <span class="k">with</span> <span class="n">col1</span><span class="p">:</span>
        <span class="c1"># 남녀 성비 분포 (Pie)
</span>        <span class="n">st</span><span class="p">.</span><span class="n">subheader</span><span class="p">(</span><span class="s">"서브 컬럼 1"</span><span class="p">)</span>
        <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">()</span>
        <span class="n">ax</span><span class="p">.</span><span class="n">pie</span><span class="p">(</span><span class="n">value_counts</span><span class="p">,</span> <span class="n">autopct</span><span class="o">=</span><span class="s">"%0.2f%%"</span><span class="p">,</span> <span class="n">labels</span> <span class="o">=</span> <span class="p">[</span><span class="s">"Male"</span><span class="p">,</span> <span class="s">"Female"</span><span class="p">])</span> <span class="c1"># 원형으로 성비 표현
</span>        <span class="n">st</span><span class="p">.</span><span class="n">pyplot</span><span class="p">(</span><span class="n">fig</span><span class="p">)</span>

    <span class="k">with</span> <span class="n">col2</span><span class="p">:</span>
        <span class="c1"># 남녀 성비 분포 (Bar)
</span>        <span class="n">st</span><span class="p">.</span><span class="n">subheader</span><span class="p">(</span><span class="s">"서브 컬럼 2"</span><span class="p">)</span>
        <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">()</span>
        <span class="n">ax</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span><span class="n">value_counts</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">value_counts</span><span class="p">)</span> <span class="c1"># bar로 성비 표현
</span>        <span class="n">st</span><span class="p">.</span><span class="n">pyplot</span><span class="p">(</span><span class="n">fig</span><span class="p">)</span>

    <span class="k">with</span> <span class="n">st</span><span class="p">.</span><span class="n">expander</span><span class="p">(</span><span class="s">"Results of Sex Ratio"</span><span class="p">):</span>
        <span class="n">st</span><span class="p">.</span><span class="n">dataframe</span><span class="p">(</span><span class="n">value_counts</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/184472017-70a9dc48-5908-4104-9d56-167c49260c7f.png" alt="image" /></p>

<p>당신은 웹페이지 내에서 다른 plot 유형을 선택해서 데이터 분포를 확인하고 싶을지도 모른다.</p>

<p>상기 목표 역시 아래처럼 손쉽게 구현 가능하다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 다른 plot 유형 선택
</span><span class="k">with</span> <span class="n">st</span><span class="p">.</span><span class="n">container</span><span class="p">():</span>
    <span class="n">st</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">"asdfasdfasdf"</span><span class="p">)</span>

    <span class="n">chart</span> <span class="o">=</span> <span class="p">(</span><span class="s">"box"</span><span class="p">,</span> <span class="s">"violin"</span><span class="p">,</span> <span class="s">"kdeplot"</span><span class="p">,</span> <span class="s">"histogram"</span><span class="p">)</span>
    <span class="n">chart_selection</span> <span class="o">=</span> <span class="n">st</span><span class="p">.</span><span class="n">selectbox</span><span class="p">(</span><span class="s">"asefaefa"</span><span class="p">,</span> <span class="n">chart</span><span class="p">)</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">()</span>

    <span class="k">if</span> <span class="n">chart_selection</span> <span class="o">==</span> <span class="s">"box"</span><span class="p">:</span>
        <span class="n">sns</span><span class="p">.</span><span class="n">boxplot</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="s">"Sex"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Fare"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">ax</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">chart_selection</span> <span class="o">==</span> <span class="s">"violin"</span><span class="p">:</span>
        <span class="n">sns</span><span class="p">.</span><span class="n">violinplot</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="s">"Sex"</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">"Fare"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">ax</span><span class="p">)</span>
    <span class="k">elif</span> <span class="n">chart_selection</span> <span class="o">==</span> <span class="s">"kdeplot"</span><span class="p">:</span>
        <span class="n">sns</span><span class="p">.</span><span class="n">kdeplot</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">"Fare"</span><span class="p">],</span> <span class="n">hue</span><span class="o">=</span><span class="n">df</span><span class="p">[</span><span class="s">"Sex"</span><span class="p">],</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">ax</span><span class="p">,</span> <span class="n">shade</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="k">else</span> <span class="p">:</span>
        <span class="n">sns</span><span class="p">.</span><span class="n">histplot</span><span class="p">(</span><span class="n">x</span> <span class="o">=</span> <span class="s">"Fare"</span><span class="p">,</span> <span class="n">hue</span><span class="o">=</span><span class="s">"Sex"</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">df</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">ax</span><span class="p">)</span>

    <span class="n">st</span><span class="p">.</span><span class="n">pyplot</span><span class="p">(</span><span class="n">fig</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/184472175-c98abfb5-55c4-4af4-a688-521659032de1.png" alt="image" /></p>

:ET