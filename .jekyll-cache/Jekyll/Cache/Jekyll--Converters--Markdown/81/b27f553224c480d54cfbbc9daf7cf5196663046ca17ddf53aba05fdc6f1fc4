I"ˆ'<p>‚Äòraw_data‚Äô is the temporary dataset, and we are going to address various preprocessing tasks with it.</p>

<h1 id="Îç∞Ïù¥ÌÑ∞-ÌôïÏù∏-describing-the-dataset">Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏ (Describing the dataset)</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span><span class="p">.</span><span class="n">info</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    &lt;class 'pandas.core.frame.DataFrame'&gt;
    Int64Index: 23 entries, 0 to 29
    Data columns (total 8 columns):
    #   Column          Non-Null Count  Dtype         
    ---  ------          --------------  -----         
    0   customer_id     23 non-null     int64         
    1   date            23 non-null     datetime64[ns]
    2   age             23 non-null     int32         
    3   gender          23 non-null     object        
    4   country         23 non-null     object        
    5   item purchased  23 non-null     float64       
    6   value           23 non-null     int64         
    7   monthly visits  23 non-null     float64       
    dtypes: datetime64[ns](1), float64(2), int32(1), int64(2), object(2)
    memory usage: 1.5+ KB
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span><span class="p">[</span><span class="s">"country"</span><span class="p">].</span><span class="n">unique</span><span class="p">(),</span> <span class="n">raw_data</span><span class="p">[</span><span class="s">"country"</span><span class="p">].</span><span class="n">nunique</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    array(['US', 'India', 'France', 'Sweden', 'USA', 'Germany', 'Chile',
        'Saudi Arabia', 'Japan', 'Norway', 'Spain', 'United Kingdom',
        'Switzerland', 'Russia'], dtype=object)

    14
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span> <span class="o">=</span> <span class="p">[</span><span class="s">"value"</span><span class="p">,</span> <span class="s">"monthly visits"</span><span class="p">,</span> <span class="s">"item purchased"</span><span class="p">]</span>
<span class="n">raw_data</span><span class="p">[</span> <span class="n">out_list</span> <span class="p">]</span> <span class="c1"># show the columns only
</span></code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/183245866-6fb2efd2-0baa-428a-8d28-60ca50f0eac8.png" alt="image" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">scipy</span> <span class="kn">import</span> <span class="n">stats</span>
<span class="n">np</span><span class="p">.</span><span class="nb">abs</span><span class="p">(</span><span class="n">stats</span><span class="p">.</span><span class="n">zscore</span><span class="p">(</span><span class="n">raw_data</span><span class="p">[</span> <span class="n">out_list</span> <span class="p">]))</span> <span class="c1"># convert data in zscore
</span></code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/183245894-aa7abed2-7b18-4c5b-bb05-7c1de3c925c9.png" alt="image" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span><span class="p">.</span><span class="n">drop</span><span class="p">(</span> <span class="p">[</span><span class="s">"customer_id"</span><span class="p">,</span> <span class="s">"date"</span><span class="p">],</span> <span class="n">axis</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span> <span class="p">)</span> <span class="c1"># remove columns
</span></code></pre></div></div>

<h1 id="Í≤∞Ï∏°Ïπò-missing-values">Í≤∞Ï∏°Ïπò (Missing Values)</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span><span class="p">.</span><span class="n">isna</span><span class="p">().</span><span class="nb">sum</span><span class="p">()</span> <span class="c1"># return the number of missing values in the dataset
</span>
<span class="n">raw_data</span><span class="p">.</span><span class="n">dropna</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span> <span class="c1"># remove rows including 'NaN'
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">sklearn.impute</span> <span class="kn">import</span> <span class="n">SimpleImputer</span>
<span class="n">imputer</span> <span class="o">=</span> <span class="n">SimpleImputer</span><span class="p">(</span><span class="n">missing_values</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">,</span> <span class="n">strategy</span><span class="o">=</span> <span class="s">"mean"</span><span class="p">)</span> <span class="c1"># usually replaced with mean value
</span>
<span class="n">raw_data</span> <span class="o">=</span> <span class="n">imputer</span><span class="p">.</span><span class="n">fit_transform</span><span class="p">(</span><span class="n">raw_data</span><span class="p">)</span> <span class="c1"># apply the tranformation
</span></code></pre></div></div>

<h1 id="Îç∞Ïù¥ÌÑ∞-Ï†ïÎ¶¨-organizing-the-data">Îç∞Ïù¥ÌÑ∞ Ï†ïÎ¶¨ (Organizing the data)</h1>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">"ERR"</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="n">nan</span><span class="p">,</span> <span class="n">inplace</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span> <span class="c1"># replace 'ERR' to 'NaN'
</span>
<span class="n">raw_data</span><span class="p">[</span><span class="s">"gender"</span><span class="p">].</span><span class="nb">str</span><span class="p">.</span><span class="n">strip</span><span class="p">()</span> <span class="c1"># remove blanks at edge
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span><span class="p">[</span><span class="s">"gender"</span><span class="p">]</span> <span class="o">=</span> <span class="n">raw_data</span><span class="p">[</span><span class="s">"gender"</span><span class="p">].</span><span class="nb">map</span><span class="p">({</span><span class="s">"Male"</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s">"Female"</span><span class="p">:</span> <span class="mi">1</span><span class="p">})</span> <span class="c1"># categorical data
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    0     0
    1     1
    4     0
    6     0
    7     0
    8     1
    9     0
    11    1
    12    0
    13    0
    14    1
    15    0
    16    1
    18    0
    19    1
    20    0
    21    1
    23    0
    24    1
    25    0
    27    0
    28    0
    29    1
    Name: gender, dtype: int64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span><span class="p">[</span><span class="s">"age"</span><span class="p">]</span> <span class="o">=</span> <span class="n">raw_data</span><span class="p">[</span><span class="s">"age"</span><span class="p">].</span><span class="n">astype</span><span class="p">(</span><span class="nb">int</span><span class="p">)</span> <span class="c1"># convert type
</span></code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">classify</span><span class="p">(</span><span class="n">label</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">label</span> <span class="o">&lt;</span> <span class="mi">500</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">"Normal"</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="s">"Active"</span>

<span class="n">raw_data</span><span class="p">[</span><span class="s">"label"</span><span class="p">]</span> <span class="o">=</span> <span class="n">raw_data</span><span class="p">[</span><span class="s">"monthly visits"</span><span class="p">].</span><span class="nb">apply</span><span class="p">(</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">classify</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">raw_data</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">get_dummies</span><span class="p">(</span><span class="n">raw_data</span><span class="p">,</span> <span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="s">"country"</span><span class="p">])</span> <span class="c1"># make new columns with the data in the 'country' column
</span></code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/39285147/183245822-467b1cd4-2b08-4554-8ed5-ffcacedd9d92.png" alt="image" /></p>

:ET